{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R_Mini_Project\"\nauthor: \"Hennie Bezuidenhout\"\ndate: \"06 September 2016\"\noutput: word_document\n---\n# Call packages to accomodate Project\n```{r}\nlibrary(readr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(ggplot2)\n```\n# Append data files \n```{r}\neqs_frame <- list.files(path = \"G:/Hennie/R Studio/Project Data/First R Project\", full.names = TRUE) %>%\n  lapply(read_csv) %>%\n  bind_rows()\n\n```\n\n# Filter Data to return Top 20 Market Cap Stocks for each month\n```{r}\nTop20 <- eqs_frame %>%\n  group_by(date) %>%\n  arrange (desc(MarketCapUSD)) %>%\n  filter(!is.na(MarketCapUSD)) %>%\n  slice (1:20) %>%\n  ungroup() %>% \n  select (date, Ticker, MarketCapUSD)\n\n```\n\n# Provide a Table to outline results for January\n```{r}\nTop20_Jan <- filter(Top20,date == \"2016-01-31\")\nkable(Top20_Jan, digits =1, caption = \"Top 20 Market Cap Stocks: January\")\n\n```\n# Calculating and outlining z-score for January\n```{r}\nzscore_eqs <- eqs_frame %>%\ngroup_by(date) %>%\nmutate (z_score = (BookYield - mean(BookYield, na.rm = TRUE))/sd(BookYield, na.rm = TRUE))\n\n\nzscore_jan <- zscore_eqs %>%\nfilter(date == \"2016-01-31\") %>%\narrange(desc(z_score)) %>%\nselect (date,Ticker, z_score) \nkable(zscore_jan, digits = 2, caption = \"All January Stocks ranked by Z-Score\")\n\n```\n\n# Grouping Book Yield Z Score by month and filter to reveal Top 10 across the respective months\n```{r}\nzscore_group <- zscore_eqs %>%\n  group_by(date) %>%\n  arrange (desc(z_score)) %>%\n  filter(!is.na(z_score)) %>%\n  slice(1:10) %>%\n  ungroup() %>%\n  select(date, Ticker, MarketCapUSD, EarningsYield, z_score)\n  kable (zscore_group, digits = 2, caption = \"Monthly Top 10 z-score stocks\")\n\n```\n\n# Calculate the Market Cap weighted weight across the 3 months (USD market caps used for entire data set)\n```{r}\n\ncap_weighted <- eqs_frame %>%\n  group_by(date) %>%\n  mutate(weight = MarketCapUSD/sum(MarketCapUSD, na.rm = TRUE)) %>%\n  ungroup()\n\n```\n# Calculate the EarningsYield for each Cap-Weighted portfolio\n```{r}\nearnings_capweighted <- cap_weighted %>%\n  group_by(date) %>%\n  mutate(ey_weights = EarningsYield * weight, na.rm = TRUE) %>%\n  ungroup()\n```\n# Filter data set across months to calculate EY per month\n```{r}\ney_jan <- filter(earnings_capweighted, date ==\"2016-01-31\")\nsummarise(ey_jan, jan_ey = sum(ey_weights, na.rm = TRUE))\n\ney_feb <- filter(earnings_capweighted, date ==\"2016-02-29\")\nsummarise(ey_feb, feb_ey = sum(ey_weights, na.rm = TRUE))\n\ney_mar <- filter(earnings_capweighted, date ==\"2016-03-31\")\nsummarise(ey_mar, mar_ey = sum(ey_weights, na.rm = TRUE))\n\n```\n# Plot Z_Scores for January: Bar Chart\n```{r}\njaneqs <- filter(zscore_eqs, date ==\"2016-01-31\")\nggplot(janeqs, aes(x = Ticker, y = z_score)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x=element_blank(), \n        axis.ticks.x=element_blank())\n\n```\n# Plot Earnings Yield for Cap Weighted Portfolio Stocks: Time-Series Chart\n```{r}\n\nggplot(earnings_capweighted, aes(x = date, y = EarningsYield)) +\n  geom_line(aes(color = Ticker), size = 0.30, show.legend = FALSE)\n\n```\n\n\n\n\n\n\n\n\n",
    "created" : 1473749611725.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2467779623",
    "id" : "C6A74B0B",
    "lastKnownWriteTime" : 1473857178,
    "last_content_update" : 1473857178573,
    "path" : "~/GitHub/Amended R Project/Amended-R-Mini-Project/R_Mini_Project.rmd",
    "project_path" : "R_Mini_Project.rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}